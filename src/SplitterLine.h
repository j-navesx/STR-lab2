/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class SplitterLine */

#ifndef _Included_SplitterLine
#define _Included_SplitterLine
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     SplitterLine
 * Method:    initializeHardwarePorts
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_initializeHardwarePorts
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder1_moveForward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder1_1moveForward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder1_moveBackward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder1_1moveBackward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder1_stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder1_1stop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder2_moveForward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder2_1moveForward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder2_moveBackward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder2_1moveBackward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder2_stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder2_1stop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder3_moveForward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder3_1moveForward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder3_moveBackward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder3_1moveBackward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder3_stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder3_1stop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    conveyorMove
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_conveyorMove
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    conveyorStop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_conveyorStop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    ledON
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_ledON
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    ledOFF
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_ledOFF
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getIdentificationSensors
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getIdentificationSensors
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    isPartAtGate1
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_SplitterLine_isPartAtGate1
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    isPartAtGate2
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_SplitterLine_isPartAtGate2
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getSwitchDock1
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_SplitterLine_getSwitchDock1
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getSwitchDock2
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_SplitterLine_getSwitchDock2
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getSwitchDock3
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_SplitterLine_getSwitchDock3
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder1_getPosition
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_cylinder1_1getPosition
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder2_getPosition
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_cylinder2_1getPosition
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder3_getPosition
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_cylinder3_1getPosition
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
